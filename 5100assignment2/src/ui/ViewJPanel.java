/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarHistory;

/**
 *
 * @author spz
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarHistory history;
    
    public ViewJPanel(CarHistory history) {
        initComponents();
        this.history = history;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCar = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblDistance = new javax.swing.JLabel();
        lblSerial = new javax.swing.JLabel();
        txtDistance = new javax.swing.JTextField();
        txtSerial = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        lblVacant = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        txtVacant = new javax.swing.JTextField();
        lblFleet = new javax.swing.JLabel();
        lblBrand = new javax.swing.JLabel();
        txtFleet = new javax.swing.JTextField();
        txtBrand = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblSeats = new javax.swing.JLabel();
        lblMaintain = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        txtMaintain = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDefault = new javax.swing.JButton();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View");

        tblCar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Distance", "Vacant", "Brand", "Year", "Seats", "Serial", "Model", "Fleet updated year", "City", "Maintain"
            }
        ));
        tblCar.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblCar);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblDistance.setText("distance(km)");

        lblSerial.setText("serial");

        lblModel.setText("model");

        lblVacant.setText("vacant(true or false)");

        lblFleet.setText("fleet(last updated year)");

        lblBrand.setText("brand");

        lblCity.setText("city");

        lblYear.setText("manufactured year");

        lblSeats.setText("seats");

        lblMaintain.setText("maintenance validation(true or false)");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDefault.setText("Default");
        btnDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaintain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFleet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblVacant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSerial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblModel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDistance)
                            .addComponent(txtVacant)
                            .addComponent(txtBrand)
                            .addComponent(txtYear)
                            .addComponent(txtSeats)
                            .addComponent(txtSerial)
                            .addComponent(txtModel)
                            .addComponent(txtFleet)
                            .addComponent(txtCity)
                            .addComponent(txtMaintain, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDefault, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDistance)
                    .addComponent(txtDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVacant)
                    .addComponent(txtVacant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBrand)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFleet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFleet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(btnDefault))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintain)
                    .addComponent(txtMaintain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCar.getSelectedRow();
        
        if(selectedRowIndex<0){
        JOptionPane.showMessageDialog(this,"Please select a row to view.");
        return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        txtDistance.setText(String.valueOf(selectedCar.getDistance()));
        txtVacant.setText(String.valueOf(selectedCar.getVacant()));
        txtBrand.setText(String.valueOf(selectedCar.getBrand()));
        txtYear.setText(String.valueOf(selectedCar.getYear()));
        txtSeats.setText(String.valueOf(selectedCar.getSeats()));
        txtSerial.setText(String.valueOf(selectedCar.getSerial()));
        txtModel.setText(String.valueOf(selectedCar.getModel()));
        txtFleet.setText(String.valueOf(selectedCar.getFleet()));
        txtCity.setText(String.valueOf(selectedCar.getCity()));
        txtMaintain.setText(String.valueOf(selectedCar.getMaintain()));
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCar.getSelectedRow();
        
        if(selectedRowIndex<0){
        JOptionPane.showMessageDialog(this,"Please select a row to delete.");
        return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        history.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(this,"Deleted.");
        populateTable();
        
        txtDistance.setText("");
        txtVacant.setText("");
        txtBrand.setText("");
        txtYear.setText("");
        txtSeats.setText("");
        txtSerial.setText("");
        txtModel.setText("");
        txtFleet.setText("");
        txtCity.setText("");
        txtMaintain.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
                int selectedRowIndex = tblCar.getSelectedRow();
        
        if(selectedRowIndex<0){
        JOptionPane.showMessageDialog(this,"Please select a row to edit.");
        return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        

        
        double distance = Double.parseDouble(txtDistance.getText());
        Boolean vacant = Boolean.parseBoolean(txtVacant.getText());
        //Boolean vacant = (Integer.parseInt(txtVacant.getText()) != 0);
        String brand = txtBrand.getText();
        int year = Integer.parseInt(txtYear.getText());
        int seats = Integer.parseInt(txtSeats.getText());
        String serial = txtSerial.getText();
        String txtmodel = txtModel.getText();
        int fleet = Integer.parseInt(txtFleet.getText());
        String city = txtCity.getText();
        Boolean maintain = Boolean.parseBoolean(txtMaintain.getText());
        
        selectedCar.setDistance(distance);
        selectedCar.setVacant(vacant);
        selectedCar.setBrand(brand);
        selectedCar.setYear(year);
        selectedCar.setSeats(seats);
        selectedCar.setSerial(serial);
        selectedCar.setModel(txtmodel);
        selectedCar.setFleet(fleet);
        selectedCar.setCity(city);
        selectedCar.setMaintain(maintain);
        
        clearTbl();
        for(Car c : history.getHistory()){
        populateNormal(c);
        }
        JOptionPane.showMessageDialog(this,"Information Updated!");

        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefaultActionPerformed
        // TODO add your handling code here:
                int selectedRowIndex = tblCar.getSelectedRow();
        
        if(selectedRowIndex<0){
        JOptionPane.showMessageDialog(this,"Please select a row to view.");
        return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        txtDistance.setText(String.valueOf(selectedCar.getDistance()));
        txtVacant.setText(String.valueOf(selectedCar.getVacant()));
        txtBrand.setText(String.valueOf(selectedCar.getBrand()));
        txtYear.setText(String.valueOf(selectedCar.getYear()));
        txtSeats.setText(String.valueOf(selectedCar.getSeats()));
        txtSerial.setText(String.valueOf(selectedCar.getSerial()));
        txtModel.setText(String.valueOf(selectedCar.getModel()));
        txtFleet.setText(String.valueOf(selectedCar.getFleet()));
        txtCity.setText(String.valueOf(selectedCar.getCity()));
        txtMaintain.setText(String.valueOf(selectedCar.getMaintain()));
    }//GEN-LAST:event_btnDefaultActionPerformed

        private void populateNormal(Car car) {
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        //model.setRowCount(0);

        Object[] row = new Object[10];
        //row[0] = car.getDistance();
        row[0] = car;
        row[1] = car.getVacant();
        row[2] = car.getBrand();
        row[3] = car.getYear();
        row[4] = car.getSeats();
        row[5] = car.getSerial();
        row[6] = car.getModel();
        row[7] = car.getFleet();
        row[8] = car.getCity();
        row[9] = car.getMaintain();
        model.addRow(row);
    }
        
            private void clearTbl() {
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        model.setRowCount(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDefault;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDistance;
    private javax.swing.JLabel lblFleet;
    private javax.swing.JLabel lblMaintain;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblVacant;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTable tblCar;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtDistance;
    private javax.swing.JTextField txtFleet;
    private javax.swing.JTextField txtMaintain;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtVacant;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        
        DefaultTableModel model = (DefaultTableModel) tblCar.getModel();
        model.setRowCount(0);
        
        for (Car car : history.getHistory())
        {
            Object[] row = new Object[10];
            //row[0] = car.getDistance();
            row[0] = car;
            row[1] = car.getVacant();
            row[2] = car.getBrand();
            row[3] = car.getYear();
            row[4] = car.getSeats();
            row[5] = car.getSerial();
            row[6] = car.getModel();
            row[7] = car.getFleet();
            row[8] = car.getCity();
            row[9] = car.getMaintain();
            
            model.addRow(row);   
        
        }
        
    }
}
